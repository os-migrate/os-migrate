- name: Generate os_migrate conversion keypair
  ansible.builtin.include_tasks: generate_keypair.yml
  when: conversion_host_keypair_generate | bool

- name: Ensure conversion host keypair mode is correct
  ansible.builtin.file:
    path: "{{ conversion_host_keypair_private_path }}"
    mode: "0600"

- name: Create a network for the conversion host
  ansible.builtin.include_tasks: create_network.yml
  when: conversion_host_manage_network | bool

- name: Create os_migrate conversion security group
  openstack.cloud.security_group:
    name: "{{ conversion_host_secgroup_name }}"
    cloud: "{{ os_migrate_conversion_cloud }}"
    validate_certs: "{{ os_migrate_conversion_validate_certs | default(omit) }}"
    ca_cert: "{{ os_migrate_conversion_ca_cert | default(omit) }}"
    client_cert: "{{ os_migrate_conversion_client_cert | default(omit) }}"
    client_key: "{{ os_migrate_conversion_client_key | default(omit) }}"

- name: Allow ssh in os_migrate conversion security group
  openstack.cloud.security_group_rule:
    security_group: "{{ conversion_host_secgroup_name }}"
    remote_ip_prefix: 0.0.0.0/0
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    cloud: "{{ os_migrate_conversion_cloud }}"
    validate_certs: "{{ os_migrate_conversion_validate_certs | default(omit) }}"
    ca_cert: "{{ os_migrate_conversion_ca_cert | default(omit) }}"
    client_cert: "{{ os_migrate_conversion_client_cert | default(omit) }}"
    client_key: "{{ os_migrate_conversion_client_key | default(omit) }}"

- name: Allow icmp in os_migrate conversion security group
  openstack.cloud.security_group_rule:
    security_group: "{{ conversion_host_secgroup_name }}"
    remote_ip_prefix: 0.0.0.0/0
    protocol: icmp
    cloud: "{{ os_migrate_conversion_cloud }}"
    validate_certs: "{{ os_migrate_conversion_validate_certs | default(omit) }}"
    ca_cert: "{{ os_migrate_conversion_ca_cert | default(omit) }}"
    client_cert: "{{ os_migrate_conversion_client_cert | default(omit) }}"
    client_key: "{{ os_migrate_conversion_client_key | default(omit) }}"

- name: Create os_migrate conversion keypair
  openstack.cloud.keypair:
    name: "{{ conversion_host_keypair_name }}"
    public_key_file: "{{ conversion_host_keypair_private_path }}.pub"
    cloud: "{{ os_migrate_conversion_cloud }}"
    validate_certs: "{{ os_migrate_conversion_validate_certs | default(omit) }}"
    ca_cert: "{{ os_migrate_conversion_ca_cert | default(omit) }}"
    client_cert: "{{ os_migrate_conversion_client_cert | default(omit) }}"
    client_key: "{{ os_migrate_conversion_client_key | default(omit) }}"

- name: Create os_migrate conversion host
  openstack.cloud.server:
    name: "{{ os_migrate_conversion_host_name }}"
    flavor: "{{ os_migrate_conversion_flavor_name }}"
    image: "{{ conversion_host_image_name }}"
    key_name: "{{ conversion_host_keypair_name }}"
    boot_from_volume: "{{ os_migrate_conversion_host_boot_from_volume | default(omit) }}"
    volume_size: "{{ os_migrate_conversion_host_volume_size | default(omit) }}"
    terminate_volume: true
    network: "{{ conversion_host_net_name }}"
    security_groups:
      - "{{ conversion_host_secgroup_name }}"
    auto_ip: false
    wait: true
    timeout: "{{ conversion_host_deploy_timeout }}"
    cloud: "{{ os_migrate_conversion_cloud }}"
    availability_zone: "{{ os_migrate_conversion_availability_zone | default(omit) }}"
    validate_certs: "{{ os_migrate_conversion_validate_certs | default(omit) }}"
    ca_cert: "{{ os_migrate_conversion_ca_cert | default(omit) }}"
    client_cert: "{{ os_migrate_conversion_client_cert | default(omit) }}"
    client_key: "{{ os_migrate_conversion_client_key | default(omit) }}"

- name: Create a floating IP for the conversion host
  ansible.builtin.include_tasks: create_fip.yml
  when: os_migrate_conversion_manage_fip | bool
