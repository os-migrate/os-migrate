- name: scan available security groups
  os_migrate.os_migrate.os_security_groups_info:
    filters: "{{ os_migrate_src_filters }}"
    cloud: src
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  register: src_security_groups_info

- name: create id-name pairs of security groups to export
  ansible.builtin.set_fact:
    export_security_groups_ids_names: "{{ (
      src_security_groups_info.openstack_security_groups
        | json_query('[*].{name: name, id: id}')
        | sort(attribute='id') ) }}"

- name: filter names of security groups to export
  ansible.builtin.set_fact:
    export_security_groups_ids_names: "{{ (
      export_security_groups_ids_names
        | os_migrate.os_migrate.stringfilter(os_migrate_security_groups_filter,
                                             attribute='name') ) }}"

# In this case we will export all the security groups
# rules for all the security groups filtered before
- name: export security group rules
  os_migrate.os_migrate.export_security_group_rules:
    cloud: src
    path: "{{ os_migrate_data_dir }}/security_group_rules.yml"
    name: "{{ item['id'] }}"
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  loop: "{{ export_security_groups_ids_names }}"
