- name: create osm_net
  os_network:
    auth: "{{ item.auth }}"
    name: osm_net
    # Apparently description is an unsupported param in Ansible even
    # though OpenStack supports it.
    # description: osm_net test network
    state: present
    mtu: "{{
      omit if os_migrate_src_release == 10
      else 1400 }}"
    validate_certs: "{{ item.validate_certs }}"
    ca_cert: "{{ item.ca_cert }}"
    client_cert: "{{ item.client_cert }}"
    client_key: "{{ item.client_key }}"
  loop:
    - auth: "{{ os_migrate_src_auth }}"
      validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
      ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
      client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
      client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: Create osm subnet
  os_subnet:
    auth: "{{ item.auth }}"
    state: present
    network_name: osm_net
    name: osm_subnet
    cidr: 192.168.20.0/24
    dns_nameservers:
      - 10.11.5.19
    host_routes:
      - destination: 192.168.20.0/24
        nexthop: 192.168.20.1
    validate_certs: "{{ item.validate_certs }}"
    ca_cert: "{{ item.ca_cert }}"
    client_cert: "{{ item.client_cert }}"
    client_key: "{{ item.client_key }}"
  loop:
    - auth: "{{ os_migrate_src_auth }}"
      validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
      ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
      client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
      client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: Create security group
  os_security_group:
    auth: "{{ item.auth }}"
    state: present
    name: osm_security_group
    description: OSM security group
    validate_certs: "{{ item.validate_certs }}"
    ca_cert: "{{ item.ca_cert }}"
    client_cert: "{{ item.client_cert }}"
    client_key: "{{ item.client_key }}"
  loop:
    - auth: "{{ os_migrate_src_auth }}"
      validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
      ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
      client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
      client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: Create security group rule
  os_security_group_rule:
    auth: "{{ item.auth }}"
    security_group: osm_security_group
    remote_ip_prefix: 0.0.0.0/0
    validate_certs: "{{ item.validate_certs }}"
    ca_cert: "{{ item.ca_cert }}"
    client_cert: "{{ item.client_cert }}"
    client_key: "{{ item.client_key }}"
  loop:
    - auth: "{{ os_migrate_src_auth }}"
      validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
      ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
      client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
      client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: create osm_router
  os_router:
    auth: "{{ item.auth }}"
    name: osm_router
    state: present
    network: "{{ os_migrate_src_osm_router_external_network|default(omit) }}"
    interfaces:
      - net: osm_net
        subnet: osm_subnet
        portip: 192.168.20.1
    validate_certs: "{{ item.validate_certs }}"
    ca_cert: "{{ item.ca_cert }}"
    client_cert: "{{ item.client_cert }}"
    client_key: "{{ item.client_key }}"
  loop:
    - auth: "{{ os_migrate_src_auth }}"
      validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
      ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
      client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
      client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

- name: Create the key folder
  file:
    path: "{{ '~' | expanduser }}/ssh-ci"
    mode: 0700
    state: directory
  tags: always

- name: Generate a keypair for the migration
  # This will not regenerate the key if
  # it already exists
  openssh_keypair:
    path: "{{ '~' | expanduser }}/ssh-ci/id_rsa"
  tags: always

- name: Create new keypair as osm_key
  os_keypair:
    auth: "{{ item.auth }}"
    state: present
    name: osm_key
    public_key_file: "{{ '~' | expanduser }}/ssh-ci/id_rsa.pub"
    validate_certs: "{{ item.validate_certs }}"
    ca_cert: "{{ item.ca_cert }}"
    client_cert: "{{ item.client_cert }}"
    client_key: "{{ item.client_key }}"
  loop:
    - auth: "{{ os_migrate_src_auth }}"
      validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
      ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
      client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
      client_key: "{{ os_migrate_src_client_key|default(omit) }}"
    - auth: "{{ os_migrate_dst_auth }}"
      validate_certs: "{{ os_migrate_dst_validate_certs|default(omit) }}"
      ca_cert: "{{ os_migrate_dst_ca_cert|default(omit) }}"
      client_cert: "{{ os_migrate_dst_client_cert|default(omit) }}"
      client_key: "{{ os_migrate_dst_client_key|default(omit) }}"
  tags:
    - always

- name: create osm_server
  os_server:
    auth: "{{ os_migrate_src_auth }}"
    name: osm_server
    state: present
    # TODO: We don't have flavors or images
    flavor: "{{ os_migrate_src_osm_server_flavor|default(m1.small) }}"
    key_name: osm_key
    image: "{{ os_migrate_src_osm_server_image|default(omit) }}"
    network: osm_net
    security_groups: osm_security_group
    # We get a floating IP
    # for the workload VM
    auto_ip: yes
    # Wait for the instance to be created
    wait: yes
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always

# In order to be able to migrate the VMS they must be turned off
- name: Shutdown osm_server
  os_server_action:
    auth: "{{ os_migrate_src_auth }}"
    server: osm_server
    action: stop
    wait: yes
    validate_certs: "{{ os_migrate_src_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_src_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_src_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_src_client_key|default(omit) }}"
  tags: always
