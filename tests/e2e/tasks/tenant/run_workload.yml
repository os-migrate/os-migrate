# FIXME: Find a way we can test the whole playbook rather than just
# the role. Either make sure we're not in a play here and use
# import_playbook, or spawn an ansible-playbook subprocess? The latter
# might be actually a more precise way to test the real end-user
# experience.

- name: Workloads tasks
  block:
    - name: export workloads
      ansible.builtin.include_role:
        name: os_migrate.os_migrate.export_workloads
      vars:
        # This expression should export all osm_ workloads
        # skipping the universal conversion host (osm_uch)
        # which is used to move the VM's.
        # We create it on in seed.yml but we dont export it.
        os_migrate_workloads_filter:
          - regex: '^osm_(?!uch)'

    - name: set boot disk copy
      ansible.builtin.replace:
        path: "{{ os_migrate_data_dir }}/workloads.yml"
        regexp: "boot_disk_copy: false"
        replace: "boot_disk_copy: true"
      when: set_boot_disk_copy|default(false)|bool

    - name: set data copy
      ansible.builtin.replace:
        path: "{{ os_migrate_data_dir }}/workloads.yml"
        regexp: "data_copy: true"
        replace: "data_copy: false"
      when: set_no_data_copy|default(false)|bool

    - name: set port creation mode to neutron
      ansible.builtin.replace:
        path: "{{ os_migrate_data_dir }}/workloads.yml"
        regexp: "port_creation_mode: nova"
        replace: "port_creation_mode: neutron"
      when: port_creation_mode|default("nova") == 'neutron'

    - name: create and set existing FIP
      ansible.builtin.include_tasks: run_workload_existing_fip.yml
      when: set_floating_ip_mode|default('') == 'existing'

    - name: load exported data
      ansible.builtin.set_fact:
        resources: "{{ (lookup('file',
                               os_migrate_data_dir +
                               '/workloads.yml') | from_yaml)
                       ['resources'] }}"

    - name: verify data contents
      ansible.builtin.assert:
        that:
          - ( item | json_query('params.name') == 'osm_server' )
      loop: "{{ resources }}"

    - name: import workloads
      ansible.builtin.include_role:
        name: os_migrate.os_migrate.import_workloads
