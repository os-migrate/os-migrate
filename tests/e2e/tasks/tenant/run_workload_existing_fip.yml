- name: get dst auth token
  openstack.cloud.auth:
    auth: "{{ os_migrate_dst_auth }}"
    validate_certs: false
  register: auth_token

- name: create osm_fip in destination
  ansible.builtin.shell: |
    openstack floating ip create  -f value -c floating_ip_address \
        --tag osm_fip {{ os_migrate_dst_conversion_external_network_name }} {{ os_migrate_insecure_opt | default('') }}
  args:
    executable: /bin/bash
  environment:
    OS_AUTH_TYPE: token
    OS_AUTH_URL: "{{ os_migrate_dst_auth.auth_url }}"
    OS_TOKEN: "{{ auth_token.auth_token }}"
    OS_PROJECT_ID: "{{ os_migrate_dst_auth.project_id|default('') }}"
    OS_PROJECT_NAME: "{{ os_migrate_dst_auth.project_name|default('') }}"
    OS_PROJECT_DOMAIN_ID: "{{ os_migrate_dst_auth.project_domain_id|default('') }}"
    OS_PROJECT_DOMAIN_NAME: "{{ os_migrate_dst_auth.project_domain_name|default('') }}"
  register: existing_fip
  changed_when: "existing_fip.rc == 0"

- name: set floating_ip_mode
  ansible.builtin.replace:
    path: "{{ os_migrate_data_dir }}/workloads.yml"
    regexp: "floating_ip_mode: .*"
    replace: "floating_ip_mode: existing"

- name: set floating_ip_address
  ansible.builtin.replace:
    path: "{{ os_migrate_data_dir }}/workloads.yml"
    regexp: "floating_ip_address: .*"
    replace: "floating_ip_address: {{ existing_fip.stdout }}"
