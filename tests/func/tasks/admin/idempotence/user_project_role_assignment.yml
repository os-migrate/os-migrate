### EXPORT IDEMPOTENCE ###

- name: export user project role assignment
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.export_user_project_role_assignments
  vars:
    export_user_project_role_assignments_filter:
      - regex: '^osm_'

# TODO: Set domain to osmdst_domain when we support migrating domains.

- name: set destination role assignment project name
  ansible.builtin.replace:
    path: "{{ os_migrate_data_dir }}/user_project_role_assignments.yml"
    regexp: "name: osm_project"
    replace: "name: osmdst_project"

- name: set destination role assignment user name
  ansible.builtin.replace:
    path: "{{ os_migrate_data_dir }}/user_project_role_assignments.yml"
    regexp: "name: osm_user"
    replace: "name: osmdst_user"

- name: re-load project_resources for idempotency test
  ansible.builtin.set_fact:
    user_project_role_assignments_resources_idem: "{{ (lookup('file',
                                os_migrate_data_dir +
                                '/user_project_role_assignments.yml') | from_yaml)
                        ['resources'] }}"

- name: verify that export file did not change
  ansible.builtin.assert:
    that:
      - user_project_role_assignments_resources_idem == user_project_role_assignments_resources
    fail_msg: |
      user_project_role_assignments_resources_idem:
      {{ user_project_role_assignments_resources_idem | to_nice_yaml }}
      user_project_role_assignments_resources:
      {{ user_project_role_assignments_resources | to_nice_yaml }}

### IMPORT IDEMPOTENCE ###

- name: look up osm_role dst cloud
  openstack.cloud.identity_role:
    auth: "{{ os_migrate_dst_auth }}"
    name: osm_role
  register: role_assignment_import_idem_before

- name: import user project role assignment
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.import_user_project_role_assignments

- name: look up osm_role in dst cloud again
  openstack.cloud.identity_role:
    auth: "{{ os_migrate_dst_auth }}"
    name: osm_role
  register: role_assignment_import_idem_after

- name: ensure osm_role did not change
  ansible.builtin.assert:
    that:
      - role_assignment_import_idem_before['role'].name != None
      - "role_assignment_import_idem_before['role']['name'] \
         == role_assignment_import_idem_after['role']['name']"
    fail_msg: |
      role_assignment_import_idem_before name:
      {{ role_assignment_import_idem_before['role'].name }}
      role_assignment_import_idem_after name:
      {{ role_assignment_import_idem_after['role'].name }}
