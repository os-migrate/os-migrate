# FIXME: Find a way we can test the whole playbook rather than just
# the role. Either make sure we're not in a play here and use
# import_playbook, or spawn an ansible-playbook subprocess? The latter
# might be actually a more precise way to test the real end-user
# experience.
- name: export projects
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.export_projects
  vars:
    export_projects_filter:
      - regex: '^osm_'

# TODO: Set domain to osmdst_domain when we support migrating domains.

- name: set destination project name
  ansible.builtin.replace:
    path: "{{ os_migrate_data_dir }}/projects.yml"
    regexp: "name: osm_project"
    replace: "name: osmdst_project"

- name: load exported data
  ansible.builtin.set_fact:
    project_resources: "{{ (lookup('file',
                           os_migrate_data_dir +
                           '/projects.yml') | from_yaml)
                   ['resources'] }}"

- name: verify data contents
  ansible.builtin.assert:
    that:
      - (project_resources |
        json_query("[?params.name ==
        'osmdst_project'].params.name")
        == ['osmdst_project'])

- name: import projects
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.import_projects
