### EXPORT IDEMPOTENCE ###

- name: export security groups
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.export_security_groups
  vars:
    os_migrate_security_groups_filter:
      - regex: '^osm_'

- name: re-load resources for idempotency test
  ansible.builtin.set_fact:
    sec_group_resources_idem: "{{ (lookup('file',
                                   os_migrate_data_dir +
                                   '/security_groups.yml') | from_yaml)
                                   ['resources'] }}"

- name: verify that export file did not change
  ansible.builtin.assert:
    that:
      - sec_group_resources_idem == security_group_resources
    fail_msg: |
      sec_group_resources_idem:
      {{ sec_group_resources_idem | to_nice_yaml }}
      security_group_resources:
      {{ security_group_resources | to_nice_yaml }}

### IMPORT IDEMPOTENCE ###

- name: look up osm_security_group dst cloud
  os_migrate.os_migrate.os_security_groups_info:
    auth: "{{ os_migrate_dst_auth }}"
    filters:
      name: osm_security_group
  register: sg_import_idem_before

- name: import security groups
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.import_security_groups

- name: look up osm_security_group in dst cloud again
  os_migrate.os_migrate.os_security_groups_info:
    auth: "{{ os_migrate_dst_auth }}"
    filters:
      name: osm_security_group
  register: sg_import_idem_after

- name: ensure updated_at for osm_security_group did not change
  ansible.builtin.assert:
    that:
      - sg_import_idem_before['openstack_security_groups'][0].updated_at != None
      - "sg_import_idem_before['openstack_security_groups'][0]['updated_at'] \
         == sg_import_idem_after['openstack_security_groups'][0]['updated_at']"
    fail_msg: |
      sg_import_idem_before updated_at:
      {{ sg_import_idem_before['openstack_security_groups'][0].updated_at }}
      sg_import_idem_after updated_at:
      {{ sg_import_idem_after['openstack_security_groups'][0].updated_at }}
