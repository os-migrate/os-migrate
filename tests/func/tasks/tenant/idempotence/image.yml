### EXPORT IDEMPOTENCE ###

- name: export images
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.export_images
  vars:
    os_migrate_images_filter:
      - regex: '^osm_'

- name: re-load image_resources for idempotency test
  ansible.builtin.set_fact:
    image_resources_idem: "{{ (lookup('file',
                                  os_migrate_data_dir +
                                  '/images.yml') | from_yaml)
                              ['resources'] }}"

- name: verify that export file did not change
  ansible.builtin.assert:
    that:
      - image_resources_idem == image_resources
    fail_msg: |
      image_resources_idem:
      {{ image_resources_idem | to_nice_yaml }}
      image_resources:
      {{ image_resources | to_nice_yaml }}

### IMPORT IDEMPOTENCE ###

- name: look up osm_image dst cloud
  openstack.cloud.image_info:
    auth: "{{ os_migrate_dst_auth }}"
    image: osm_image
  register: image_import_idem_before

- name: import images
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.import_images

- name: look up osm_image in dst cloud again
  openstack.cloud.image_info:
    auth: "{{ os_migrate_dst_auth }}"
    image: osm_image
  register: image_import_idem_after

- name: ensure updated_at for osm_image did not change
  ansible.builtin.assert:
    that:
      - image_import_idem_before['images'][0].updated_at != None
      - "image_import_idem_before['images'][0]['updated_at'] \
         == image_import_idem_after['images'][0]['updated_at']"
    fail_msg: |
      image_import_idem_before updated_at:
      {{ image_import_idem_before['images'][0].updated_at }}
      image_import_idem_after updated_at:
      {{ image_import_idem_after['images'][0].updated_at }}
