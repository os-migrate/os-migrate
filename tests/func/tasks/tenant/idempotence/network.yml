### EXPORT IDEMPOTENCE ###

- name: export networks
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.export_networks
  vars:
    os_migrate_networks_filter:
      - regex: '^osm_'

- name: re-load network_resources for idempotency test
  ansible.builtin.set_fact:
    network_resources_idem: "{{ (lookup('file',
                                os_migrate_data_dir +
                                '/networks.yml') | from_yaml)
                        ['resources'] }}"

- name: verify that export file did not change
  ansible.builtin.assert:
    that:
      - network_resources_idem == network_resources
    fail_msg: |
      network_resources_idem:
      {{ network_resources_idem | to_nice_yaml }}
      network_resources:
      {{ network_resources | to_nice_yaml }}

### IMPORT IDEMPOTENCE ###

- name: look up osm_net dst cloud
  openstack.cloud.networks_info:
    auth: "{{ os_migrate_dst_auth }}"
    filters:
      name: osm_net
  register: network_import_idem_before

- name: import networks
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.import_networks

- name: look up osm_net in dst cloud again
  openstack.cloud.networks_info:
    auth: "{{ os_migrate_dst_auth }}"
    filters:
      name: osm_net
  register: network_import_idem_after

- name: ensure updated_at for osm_net did not change
  ansible.builtin.assert:
    that:
      - network_import_idem_before['networks'][0].updated_at != None
      - "network_import_idem_before['networks'][0]['updated_at'] \
         == network_import_idem_after['networks'][0]['updated_at']"
    fail_msg: |
      network_import_idem_before updated_at:
      {{ network_import_idem_before['networks'][0].updated_at }}
      network_import_idem_after updated_at:
      {{ network_import_idem_after['networks'][0].updated_at }}
