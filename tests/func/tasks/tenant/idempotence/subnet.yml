### EXPORT IDEMPOTENCE ###

- name: export subnets
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.export_subnets
  vars:
    os_migrate_subnets_filter:
      - regex: '^osm_'

- name: re-load resources for idempotency test
  ansible.builtin.set_fact:
    subnet_resources_idem: "{{ (lookup('file',
                                os_migrate_data_dir +
                                '/subnets.yml') | from_yaml)
                        ['resources'] }}"

- name: verify that export file did not change
  ansible.builtin.assert:
    that:
      - subnet_resources_idem == subnet_resources
    fail_msg: |
      subnet_resources_idem:
      {{ subnet_resources_idem | to_nice_yaml }}
      subnet_resources:
      {{ subnet_resources | to_nice_yaml }}

### IMPORT IDEMPOTENCE ###

- name: look up osm_subnet dst cloud
  openstack.cloud.subnets_info:
    auth: "{{ os_migrate_dst_auth }}"
    filters:
      name: osm_subnet
  register: subnet_import_idem_before

- name: import subnets
  ansible.builtin.include_role:
    name: os_migrate.os_migrate.import_subnets

- name: look up osm_subnet in dst cloud again
  openstack.cloud.subnets_info:
    auth: "{{ os_migrate_dst_auth }}"
    filters:
      name: osm_subnet
  register: subnet_import_idem_after

- name: ensure updated_at for osm_subnet did not change
  ansible.builtin.assert:
    that:
      - subnet_import_idem_before['subnets'][0].updated_at != None
      - "subnet_import_idem_before['subnets'][0]['updated_at'] \
         == subnet_import_idem_after['subnets'][0]['updated_at']"
    fail_msg: |
      subnet_import_idem_before updated_at:
      {{ subnet_import_idem_before['subnets'][0].updated_at }}
      subnet_import_idem_after updated_at:
      {{ subnet_import_idem_after['subnets'][0].updated_at }}
