require 'yaml'

VAGRANTFILE_API_VERSION = "2"
CONFIG_FILE_NAME = ENV["VAGRANT_CONFIG"] || File.dirname(__FILE__) + '/vagrant-config.yml'
CFG = YAML.load(File.read(CONFIG_FILE_NAME))

Vagrant.require_version ">= 1.6.2"

# === Vagrant config ===

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Fedora
  config.ssh.username = 'root'

  # CentOS
  # config.ssh.insert_key = true
  # config.ssh.password = 'vagrant'

  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder './vagrant-sync', '/vagrant-sync', type: 'rsync'

  config.vm.provider :libvirt do |libvirt, override|
    libvirt.driver = 'kvm'
    libvirt.connect_via_ssh = false
    libvirt.username = 'root'
    libvirt.default_prefix = CFG["libvirt"]["default_prefix"]
    libvirt.storage_pool_name = CFG["libvirt"]["storage_pool_name"]
    libvirt.qemu_use_session = CFG["libvirt"]["qemu_use_session"]
    libvirt.uri = CFG["libvirt"]["uri"]
    libvirt.system_uri = CFG["libvirt"]["system_uri"]
    libvirt.storage_pool_path = CFG["libvirt"]["storage_pool_path"]
    libvirt.management_network_device = CFG["libvirt"]["management_network_device"]

    override.vm.box = CFG["libvirt"]["box"]
    override.vm.provider :libvirt do |vm_libvirt|
      libvirt.suspend_mode = CFG["libvirt"]["suspend_mode"]
    end
  end

  config.vm.define 'devstack' do |vm_config|
    vm_config.vm.hostname = 'devstack'
    vm_config.vm.network :public_network, :dev => "virbr0", :mode => "bridge", :type => "bridge"

    vm_config.vm.provider :libvirt do |libvirt|
      libvirt.memory = 8192
      libvirt.cpus = 4
    end

    vm_config.vm.provision "shell", inline: "/vagrant-sync/preconfigure.sh"
    vm_config.vm.provision "ansible" do |ansible|
      ansible.playbook = "ansible/configure.yml"
    end

    vm_config.trigger.after :up do |trigger|
      trigger.run = { :path => "triggers/after_up.sh" }
    end
  end
end
